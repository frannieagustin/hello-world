import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

// Complete the substrCount function below.
    static long substrCount(int n, String s) {
        int result = 0;
        char[] arrS = s.toCharArray();
        int repeats = 0;

        for(int i=1; i<n-1; i++){
            //System.out.println(arrS[i-1]+"=="+arrS[i+1]);
            System.out.println("index=="+i);

            //palindrome
            if(arrS[i-1]==arrS[i+1]){
                System.out.println("comparing::arrS[i-1]==arrS[i+1]::"+arrS[i-1]+"=="+arrS[i+1]);
                result++;
            }

            //repeatable char
            if(arrS[i-1]==arrS[i]){
                System.out.println("comparing::arrS[i-1]==arrS[i]::"+arrS[i-1]+"=="+arrS[i]);
                repeats++;
            }

            /*int test = n-2;
            //System.out.println(i+"=="+test);
            if(i==test){
                if(arrS[i]==arrS[i+1]){
                    result++;
                }
            }*/

            result += repeats * (repeats+1) / 2;
            
            }
        return result+n;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String s = scanner.nextLine();

        long result = substrCount(n, s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
